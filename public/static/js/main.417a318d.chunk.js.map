{"version":3,"sources":["components/Aside.js","actions/fetchQuote.js","components/Quote.js","components/App.js","reducers/rootReducer.js","reducers/quoteReducer.js","index.js","store/createStore.js"],"names":["Aside","React","Component","quoteIsLoading","bool","type","isLoading","Quote","handleClick","props","fetchQuote","this","hasErrored","size","color","className","onClick","data-test","quote","source","src","alt","height","width","connect","state","quoteHasErrored","dispatch","url","fetch","then","response","ok","Error","statusText","json","quoteFetchSuccess","catch","fetchQuoteData","App","combineReducers","action","initialState","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"yPAkBeA,G,uLAbP,OACI,+BACI,0CACA,gD,GALIC,IAAMC,Y,yBCMnB,SAASC,EAAeC,GAC3B,MAAO,CACHC,KAAM,mBACNC,UAAWF,G,YCNbG,E,2MAIFC,YAAc,WACZ,EAAKC,MAAMC,WAAW,4E,mFAHtBC,KAAKF,MAAMC,WAAW,6E,+BAMtB,OAAIC,KAAKF,MAAMG,WACN,sEAELD,KAAKF,MAAMH,UACN,kBAAC,iBAAD,CACCO,KAAM,GACNC,MAAM,YAKd,yBAAKC,UAAU,aACb,4BAAQC,QAASL,KAAKH,aAAtB,iBACA,yBAAKS,YAAU,gBACb,2BAAIN,KAAKF,MAAMS,MAAMA,QAGvB,yBAAKD,YAAU,sBACb,2BAAIN,KAAKF,MAAMS,MAAMC,OAArB,KAEA,yBAAKC,IAAI,mCAAmCC,IAAI,6BAA6BC,OAAO,QAAQC,MAAM,e,GA5B1FtB,IAAMC,WAmDXsB,eAhBS,SAACC,GACvB,MAAO,CACLP,MAAOO,EAAMP,MACbN,WAAYa,EAAMC,gBAClBpB,UAAWmB,EAAMtB,mBAIM,SAACwB,GAC1B,MAAO,CACLjB,WAAY,SAACkB,GACXD,ED9BC,SAAwBC,GAC3B,OAAO,SAACD,GACJA,EAASxB,GAAe,IACxB0B,IAAMD,GACLE,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,MAAMC,MAAMF,EAASG,YAGzB,OADAP,EAASxB,GAAe,IACjB4B,KAEVD,MAAK,SAACC,GAAD,OAAcA,EAASI,UAC5BL,MAAK,SAACZ,GAAD,OAAWS,EAlBlB,SAA2BT,GAC9B,MAAO,CACHb,KAAM,sBACNa,SAe0BkB,CAAkBlB,OAC3CmB,OAAM,kBAAMV,EAhCV,CACHtB,KAAM,oBACNO,YA8BsC,QCiB/B0B,CAAeV,QAKfJ,CAA6CjB,GCnC7CgC,E,iLAbX,OACE,yBAAKxB,UAAU,UACb,kBAAC,EAAD,MACA,6BACE,6CAGF,kBAAC,EAAD,W,GAVUd,IAAMC,W,eCHTsC,kBAAgB,CAC7BtB,MCgBK,WAAoC,IAArBO,EAAoB,uDAAZ,GAAIgB,EAAQ,uCACtC,OAAOA,EAAOpC,MACV,IAAK,sBACD,OAAOoC,EAAOvB,MAElB,QACI,OAAOO,IDrBjBC,gBCLK,WAAiD,IAAxBD,EAAuB,wDAARgB,EAAQ,uCACnD,OAAOA,EAAOpC,MACV,IAAK,oBACD,OAAOoC,EAAO7B,WAElB,QACI,OAAOa,IDAjBtB,eCIK,WAAgD,IAAxBsB,EAAuB,wDAARgB,EAAQ,uCAClD,OAAOA,EAAOpC,MACV,IAAK,mBACD,OAAOoC,EAAOnC,UAElB,QACI,OAAOmB,MCVnB,ICFuCiB,EDEjCC,ECDKC,YACHC,EACAH,EACAI,YAAgBC,MDAxBC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,eAAe,W","file":"static/js/main.417a318d.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nclass Aside extends React.Component {\n    render () {\n        return (\n            <aside>\n                <button>Log In</button>\n                <button>Sign Up</button>\n            </aside>\n        \n        )\n    }\n\n\n\n}\n\nexport default Aside","import fetch from 'cross-fetch'\n\nexport function quoteHasErrored(bool) {\n    return {\n        type: 'QUOTE_HAS_ERRORED',\n        hasErrored: bool\n    };\n}\n\nexport function quoteIsLoading(bool) {\n    return {\n        type: 'QUOTE_IS_LOADING',\n        isLoading: bool\n    };\n}\n\nexport function quoteFetchSuccess(quote) {\n    return {\n        type: 'QUOTE_FETCH_SUCCESS',\n        quote\n    };\n}\nexport function fetchQuoteData(url) {\n    return (dispatch) => {\n        dispatch(quoteIsLoading(true))\n        fetch(url)\n        .then((response) => {\n            if (!response.ok) {\n                throw Error(response.statusText);\n            }\n            dispatch(quoteIsLoading(false));\n            return response;\n        })\n        .then((response) => response.json())\n        .then((quote) => dispatch(quoteFetchSuccess(quote)))\n        .catch(() => dispatch(quoteHasErrored(true)));\n    };\n}\n\n    \n      ","import React from 'react'\nimport { connect } from 'react-redux'\nimport { fetchQuoteData } from '../actions/fetchQuote'\nimport { ClassicSpinner } from \"react-spinners-kit\";\n// import PropTypes from 'prop-types';\n\nclass Quote extends React.Component {\n    componentDidMount() {\n      this.props.fetchQuote('https://us-central1-corded-essence-252619.cloudfunctions.net/function-1');\n    }\n    handleClick = () => {\n      this.props.fetchQuote('https://us-central1-corded-essence-252619.cloudfunctions.net/function-1');\n    } \n    render () {\n      if (this.props.hasErrored) {\n        return <p>There's been an error! Please try again</p>\n      }\n      if (this.props.isLoading) {\n        return <ClassicSpinner \n                size={30}\n                color=\"#686769\"\n                // loading={true}\n              />\n      }\n      return (\n        <div className='container'>\n          <button onClick={this.handleClick}>Get the Juice</button>\n          <div data-test='fetchedQuote'>\n            <p>{this.props.quote.quote}</p>\n          </div>\n\n          <div data-test='fetchedQuoteSource'>\n            <p>{this.props.quote.source} </p>\n  \n            <img src=\"http://placekitten.com/g/200/300\" alt=\"kitty cat kitty cat purrrr\" height=\"300px\" width=\"auto\"></img>\n          </div>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    quote: state.quote,\n    hasErrored: state.quoteHasErrored,\n    isLoading: state.quoteIsLoading\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchQuote: (url) => {\n      dispatch(fetchQuoteData(url))\n    }  \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quote);","import React from 'react';\nimport '../App.css';\nimport Aside from './Aside.js';\nimport Quote from './Quote.js';\n\n\nclass App extends React.Component {\n  \n  render () {\n    return (\n      <div className='center'>\n        <Aside />\n        <div>\n          <h1>Lizzpiration</h1>\n          \n        </div>\n        <Quote />\n      </div>\n    )\n  }\n}\n\nexport default App;","import { combineReducers } from 'redux';\nimport { quote, quoteHasErrored, quoteIsLoading } from './quoteReducer';\n\nexport default combineReducers({\n  quote,\n  quoteHasErrored,\n  quoteIsLoading\n});","export function quoteHasErrored(state = false, action) {\n    switch(action.type) {\n        case 'QUOTE_HAS_ERRORED':\n            return action.hasErrored;\n\n        default:\n            return state;\n    }\n}\n\nexport function quoteIsLoading(state = false, action) {\n    switch(action.type) {\n        case 'QUOTE_IS_LOADING':\n            return action.isLoading;\n\n        default:\n            return state;\n    }\n}\n\nexport function quote(state = '', action) {\n    switch(action.type) {\n        case 'QUOTE_FETCH_SUCCESS':\n            return action.quote;\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/createStore';\n\nconst store = configureStore()\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/rootReducer.js';\n\nexport default function configureStore(initialState) {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    );\n}"],"sourceRoot":""}